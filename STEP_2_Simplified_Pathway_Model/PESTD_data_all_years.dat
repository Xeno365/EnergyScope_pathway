# -------------------------------------------------------------------------------------------------------------------------
#	EnergyScope TD is an open-source energy model suitable for country scale analysis. It is a simplified representation of an urban or national energy system accounting for the energy flows
#	within its boundaries. Based on a hourly resolution, it optimises the design and operation of the energy system while minimizing the cost of the system.
#
#	Copyright (C) <2018-2019> <Ecole Polytechnique Fédérale de Lausanne (EPFL), Switzerland and Université catholique de Louvain (UCLouvain), Belgium>
#
#
#	Licensed under the Apache License, Version 2.0 (the "License");
#	you may not use this file except in compliance with the License.
#	You may obtain a copy of the License at
#
#	http://www.apache.org/licenses/LICENSE-2.0
#
#	Unless required by applicable law or agreed to in writing, software
#	distributed under the License is distributed on an "AS IS" BASIS,
#	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#	See the License for the specific language governing permissions and
#	limitations under the License.
#
#	Description and complete License: see LICENSE file.
# -------------------------------------------------------------------------------------------------------------------------

# Colors meaning :
# Specific to belgium : RED
# NON energy used : Blue
# Freight mobility by boat : GREEN
# Synthetic fuels and storage : Yellow
# Wet biomass, Biomethanation and chp : Purple

#ADDITIONNAL DATA FROM GG :
#Layers : CO2_ATM CO2_CIMENT CO2_CAPTURED
#Technologies : CIMENT_CCS ATM_CCS SYN_METHANATION CO2_STORAGE
#Sources :
# CIMENT_CCS
# ATM_CCS
# SYN_METHANATION
# CO2_CIMENT : https://www.holcim.ch/sites/switzerland/files/atoms/files/donnees_environnementales_2015.pdf page 3 table. 1.5 MTCO2
# CO2_STORAGE :
# CO2 layers are in Mmol = 1e6 mol. 1 mol of CO2 required per mol of CH4 => 1 GWh of CH4 (<=> 80tCH4) requires 0.22 ktCO2

# UNIT MEASURES:
# Unless otherwise specified units are:
# Energy [GWh], Power [GW], Cost [MCHF], Time [h], Passenger transport [Mpkm], Freight Transport [Mtkm]

# References based on Supplementary material

##New set for PATHWAY:
set	YEARS	:=	YEAR_2020	YEAR_2030	YEAR_2040	YEAR_2050	;
set PHASE := 	2020_2030	2030_2040	2040_2050;
set PHASE_START["2020_2030"] :=	YEAR_2020;
set PHASE_START["2030_2040"] :=	YEAR_2030;
set PHASE_START["2040_2050"] :=	YEAR_2040;

set PHASE_STOP["2020_2030"] :=	YEAR_2030;
set PHASE_STOP["2030_2040"] :=	YEAR_2040;
set PHASE_STOP["2040_2050"] :=	YEAR_2050;



# --------------------------
# SETS not depending on TD
# --------------------------

set SECTORS := 	HOUSEHOLDS	SERVICES	INDUSTRY	TRANSPORTATION;
set END_USES_INPUT := 	ELECTRICITY	LIGHTING	HEAT_HIGH_T	HEAT_LOW_T_SH	HEAT_LOW_T_HW	MOBILITY_PASSENGER	MOBILITY_FREIGHT	NON_ENERGY	;
set END_USES_CATEGORIES := 	ELECTRICITY	HEAT_HIGH_T	HEAT_LOW_T	MOBILITY_PASSENGER	MOBILITY_FREIGHT	NON_ENERGY;
set RESOURCES :=	ELECTRICITY	GASOLINE	DIESEL	BIOETHANOL	BIODIESEL	LFO		NG	SLF	SNG	WOOD	WET_BIOMASS	COAL		URANIUM	WASTE	H2	ELEC_EXPORT CO2_EMISSIONS RES_WIND RES_SOLAR  RES_HYDRO RES_GEO	 CO2_ATM CO2_INDUSTRY CO2_CAPTURED;
set BIOFUELS :=	BIOETHANOL	BIODIESEL	SNG	;
set RE_RESOURCES :=	 BIOETHANOL	BIODIESEL	SNG WOOD RES_WIND RES_SOLAR  RES_HYDRO RES_GEO	WET_BIOMASS;
set EXPORT := 	ELEC_EXPORT	CO2_EMISSIONS;

set END_USES_TYPES_OF_CATEGORY["ELECTRICITY"] :=	ELECTRICITY;
set END_USES_TYPES_OF_CATEGORY["HEAT_HIGH_T"] :=	HEAT_HIGH_T;
set END_USES_TYPES_OF_CATEGORY["HEAT_LOW_T"] :=	HEAT_LOW_T_DHN	HEAT_LOW_T_DECEN;
set END_USES_TYPES_OF_CATEGORY["MOBILITY_PASSENGER"] :=	MOB_PUBLIC	MOB_PRIVATE;
set END_USES_TYPES_OF_CATEGORY["MOBILITY_FREIGHT"] :=	MOB_FREIGHT_RAIL	MOB_FREIGHT_BOAT	MOB_FREIGHT_ROAD;
set END_USES_TYPES_OF_CATEGORY["NON_ENERGY"] :=	NON_ENERGY;

set TECHNOLOGIES_OF_END_USES_TYPE["ELECTRICITY"] := 	NUCLEAR	CCGT		COAL_US	COAL_IGCC			PV	WIND_ONSHORE	WIND_OFFSHORE		HYDRO_RIVER		GEOTHERMAL;
set TECHNOLOGIES_OF_END_USES_TYPE["HEAT_HIGH_T"] := 	IND_COGEN_GAS	IND_COGEN_WOOD	IND_COGEN_WASTE	IND_BOILER_GAS	IND_BOILER_WOOD	IND_BOILER_OIL	IND_BOILER_COAL	IND_BOILER_WASTE	IND_DIRECT_ELEC;
set TECHNOLOGIES_OF_END_USES_TYPE["HEAT_LOW_T_DHN"] := 	DHN_HP_ELEC	DHN_COGEN_GAS	DHN_COGEN_WOOD	DHN_COGEN_WET_BIOMASS	DHN_COGEN_BIO_HYDROLYSIS	DHN_COGEN_WASTE	DHN_BOILER_GAS	DHN_BOILER_WOOD	DHN_BOILER_OIL	DHN_DEEP_GEO	DHN_SOLAR	;
set TECHNOLOGIES_OF_END_USES_TYPE["HEAT_LOW_T_DECEN"] := 	DEC_HP_ELEC	DEC_THHP_GAS	DEC_COGEN_GAS	DEC_COGEN_OIL	DEC_ADVCOGEN_GAS	DEC_ADVCOGEN_H2	DEC_BOILER_GAS	DEC_BOILER_WOOD	DEC_BOILER_OIL	DEC_SOLAR	DEC_DIRECT_ELEC;
set TECHNOLOGIES_OF_END_USES_TYPE["MOB_PUBLIC"] := 	TRAMWAY_TROLLEY	BUS_COACH_DIESEL	BUS_COACH_HYDIESEL	BUS_COACH_CNG_STOICH	BUS_COACH_FC_HYBRIDH2	TRAIN_PUB;
set TECHNOLOGIES_OF_END_USES_TYPE["MOB_PRIVATE"] := 	CAR_GASOLINE	CAR_DIESEL	CAR_NG	CAR_HEV	CAR_PHEV	CAR_BEV	CAR_FUEL_CELL;
set TECHNOLOGIES_OF_END_USES_TYPE["MOB_FREIGHT_RAIL"] :=	 TRAIN_FREIGHT;
set TECHNOLOGIES_OF_END_USES_TYPE["MOB_FREIGHT_BOAT"] :=	BOAT_FREIGHT_DIESEL	BOAT_FREIGHT_NG	;
set TECHNOLOGIES_OF_END_USES_TYPE["MOB_FREIGHT_ROAD"] := 	TRUCK_DIESEL	 TRUCK_FUEL_CELL	TRUCK_ELEC	 TRUCK_NG;
set TECHNOLOGIES_OF_END_USES_TYPE["NON_ENERGY"] := 	NON_ENERGY_OIL	NON_ENERGY_NG		;

set STORAGE_TECH :=			 PHS BATT_LI 	BEV_BATT 	PHEV_BATT 	TS_DEC_HP_ELEC	 TS_DEC_DIRECT_ELEC	  TS_DHN_DAILY	  TS_DHN_SEASONAL	 TS_DEC_THHP_GAS	TS_DEC_COGEN_GAS	TS_DEC_COGEN_OIL	TS_DEC_ADVCOGEN_GAS	TS_DEC_ADVCOGEN_H2	TS_DEC_BOILER_GAS	TS_DEC_BOILER_WOOD	TS_DEC_BOILER_OIL	TS_HIGH_TEMP	 SEASONAL_NG SEASONAL_H2 CO2_STORAGE	SLF_STO;
set INFRASTRUCTURE  :=		MOTORWAYS	ROADS	RAILWAYS
	EFFICIENCY	DHN	GRID			H2_ELECTROLYSIS 	H2_NG	H2_BIOMASS	GASIFICATION_SNG	PYROLYSIS	ATM_CCS 	INDUSTRY_CCS 	SYN_METHANOLATION	SYN_METHANATION	BIOMETHANATION	BIO_HYDROLYSIS	METHANE_TO_METHANOL	SLF_TO_DIESEL	SLF_TO_GASOLINE	SLF_TO_LFO		;

# Storage subsets
set EVs_BATT  := 	 BEV_BATT 	PHEV_BATT;
set V2G   := CAR_PHEV	CAR_BEV;
set STORAGE_DAILY := 	TS_DEC_HP_ELEC	TS_DEC_THHP_GAS	TS_DEC_COGEN_GAS	TS_DEC_COGEN_OIL	TS_DEC_ADVCOGEN_GAS	TS_DEC_ADVCOGEN_H2	TS_DEC_BOILER_GAS	TS_DEC_BOILER_WOOD	TS_DEC_BOILER_OIL	TS_DEC_DIRECT_ELEC TS_DHN_DAILY	BATT_LI	;

set STORAGE_OF_END_USES_TYPES ["HEAT_LOW_T_DHN"] := 	TS_DHN_DAILY 	TS_DHN_SEASONAL;
set STORAGE_OF_END_USES_TYPES ["HEAT_LOW_T_DECEN"] := 	TS_DEC_HP_ELEC	TS_DEC_THHP_GAS	TS_DEC_COGEN_GAS	TS_DEC_COGEN_OIL	TS_DEC_ADVCOGEN_GAS	TS_DEC_ADVCOGEN_H2	TS_DEC_BOILER_GAS	TS_DEC_BOILER_WOOD	TS_DEC_BOILER_OIL	TS_DEC_DIRECT_ELEC;
set STORAGE_OF_END_USES_TYPES ["ELECTRICITY"] := 	PHS 	BATT_LI;
set STORAGE_OF_END_USES_TYPES ["HEAT_HIGH_T"] := 	TS_HIGH_TEMP	;

# Link between storages & specific technologies
set TS_OF_DEC_TECH ["DEC_HP_ELEC"] := TS_DEC_HP_ELEC;
set TS_OF_DEC_TECH ["DEC_DIRECT_ELEC"] := TS_DEC_DIRECT_ELEC;
set TS_OF_DEC_TECH ["DEC_THHP_GAS"] := TS_DEC_THHP_GAS;
set TS_OF_DEC_TECH ["DEC_COGEN_GAS"] := TS_DEC_COGEN_GAS;
set TS_OF_DEC_TECH ["DEC_ADVCOGEN_GAS"] := TS_DEC_ADVCOGEN_GAS;
set TS_OF_DEC_TECH ["DEC_COGEN_OIL"] := TS_DEC_COGEN_OIL;
set TS_OF_DEC_TECH ["DEC_ADVCOGEN_H2"] := TS_DEC_ADVCOGEN_H2;
set TS_OF_DEC_TECH ["DEC_BOILER_GAS"] := TS_DEC_BOILER_GAS;
set TS_OF_DEC_TECH ["DEC_BOILER_WOOD"] := TS_DEC_BOILER_WOOD;
set TS_OF_DEC_TECH ["DEC_BOILER_OIL"] := TS_DEC_BOILER_OIL;
set EVs_BATT_OF_V2G ["CAR_PHEV"] := PHEV_BATT;
set EVs_BATT_OF_V2G ["CAR_BEV"]  := BEV_BATT;

# Additional sets, just needed for printing results
set COGEN	:=  IND_COGEN_GAS	IND_COGEN_WOOD	IND_COGEN_WASTE	DHN_COGEN_GAS	DHN_COGEN_WOOD	DHN_COGEN_WASTE  DHN_COGEN_WET_BIOMASS DEC_COGEN_GAS	DEC_COGEN_OIL DEC_ADVCOGEN_GAS	DEC_ADVCOGEN_H2	DHN_COGEN_BIO_HYDROLYSIS	;
set BOILERS	:=	IND_BOILER_GAS	IND_BOILER_WOOD	IND_BOILER_OIL	IND_BOILER_COAL	IND_BOILER_WASTE	DHN_BOILER_GAS	DHN_BOILER_WOOD	DHN_BOILER_OIL	DEC_BOILER_GAS	DEC_BOILER_WOOD	DEC_BOILER_OIL;

# -----------------------------
# PARAMETERS NOT DEPENDING ON THE NUMBER OF TYPICAL DAYS :
# -----------------------------

## PARAMETERS presented in Table 2.
param i_rate := 	0.015	; # part [2.7.4]

##New PARAEMTERS for PATHWAY:
param max_inv_phase :=
2020_2030 1e9
2030_2040 1e9
2040_2050 1e9
;

param t_phase := 10; # 10 years between a phase

param diff_2020_phase :=
2020_2030 5
2030_2040 15
2040_2050 25 
;

param	limit_LT_renovation := 0.5 ; # 50% change in 10 years
param	limit_pass_mob_changes := 0.5 ;
param	limit_freight_changes := 0.5 ;
param limit_ren_changes := 0.5 ;

param c_grid_extra :=	3.68E+02	;	# cost to reinforce the grid due to intermittent renewable energy penetration. See 2.2.2

param power_density_pv :=	0.2367	;
param power_density_solar_thermal :=	0.2857	;
